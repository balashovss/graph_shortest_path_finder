# CMAKE generated file: DO NOT EDIT!
# Generated by "Ninja" Generator, CMake Version 3.22

# This file contains all the build statements describing the
# compilation DAG.

# =============================================================================
# Write statements declared in CMakeLists.txt:
# 
# Which is the root file.
# =============================================================================

# =============================================================================
# Project: HelloWorld
# Configurations: Release
# =============================================================================

#############################################
# Minimal version of Ninja required by this file

ninja_required_version = 1.5


#############################################
# Set configuration variable for custom commands.

CONFIGURATION = Release
# =============================================================================
# Include auxiliary files.


#############################################
# Include rules file.

include CMakeFiles/rules.ninja

# =============================================================================

#############################################
# Logical path to working directory; prefix for absolute paths.

cmake_ninja_workdir = /home/semakiller/Рабочий$ стол/Projects/BMSTU/MazeProject1/project_on_cpp_with_ui/HelloWorld/build/Desktop-Release/
# =============================================================================
# Object build statements for EXECUTABLE target HelloWorld


#############################################
# Order-only phony target for HelloWorld

build cmake_object_order_depends_target_HelloWorld: phony || HelloWorld_autogen HelloWorld_autogen/mocs_compilation.cpp HelloWorld_autogen/timestamp HelloWorld_autogen_timestamp_deps

build CMakeFiles/HelloWorld.dir/HelloWorld_autogen/mocs_compilation.cpp.o: CXX_COMPILER__HelloWorld_Release /home/semakiller/Рабочий$ стол/Projects/BMSTU/MazeProject1/project_on_cpp_with_ui/HelloWorld/build/Desktop-Release/HelloWorld_autogen/mocs_compilation.cpp || cmake_object_order_depends_target_HelloWorld
  DEFINES = -DQT_CORE_LIB -DQT_GUI_LIB -DQT_NO_DEBUG -DQT_WIDGETS_LIB
  DEP_FILE = CMakeFiles/HelloWorld.dir/HelloWorld_autogen/mocs_compilation.cpp.o.d
  FLAGS = -O3 -DNDEBUG -fPIC -std=gnu++17
  INCLUDES = -I"/home/semakiller/Рабочий стол/Projects/BMSTU/MazeProject1/project_on_cpp_with_ui/HelloWorld/build/Desktop-Release/HelloWorld_autogen/include" -isystem /usr/include/x86_64-linux-gnu/qt5 -isystem /usr/include/x86_64-linux-gnu/qt5/QtWidgets -isystem /usr/include/x86_64-linux-gnu/qt5/QtGui -isystem /usr/include/x86_64-linux-gnu/qt5/QtCore -isystem /usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++
  OBJECT_DIR = CMakeFiles/HelloWorld.dir
  OBJECT_FILE_DIR = CMakeFiles/HelloWorld.dir/HelloWorld_autogen

build CMakeFiles/HelloWorld.dir/main.cpp.o: CXX_COMPILER__HelloWorld_Release /home/semakiller/Рабочий$ стол/Projects/BMSTU/MazeProject1/project_on_cpp_with_ui/HelloWorld/main.cpp || cmake_object_order_depends_target_HelloWorld
  DEFINES = -DQT_CORE_LIB -DQT_GUI_LIB -DQT_NO_DEBUG -DQT_WIDGETS_LIB
  DEP_FILE = CMakeFiles/HelloWorld.dir/main.cpp.o.d
  FLAGS = -O3 -DNDEBUG -fPIC -std=gnu++17
  INCLUDES = -I"/home/semakiller/Рабочий стол/Projects/BMSTU/MazeProject1/project_on_cpp_with_ui/HelloWorld/build/Desktop-Release/HelloWorld_autogen/include" -isystem /usr/include/x86_64-linux-gnu/qt5 -isystem /usr/include/x86_64-linux-gnu/qt5/QtWidgets -isystem /usr/include/x86_64-linux-gnu/qt5/QtGui -isystem /usr/include/x86_64-linux-gnu/qt5/QtCore -isystem /usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++
  OBJECT_DIR = CMakeFiles/HelloWorld.dir
  OBJECT_FILE_DIR = CMakeFiles/HelloWorld.dir

build CMakeFiles/HelloWorld.dir/mainwindow.cpp.o: CXX_COMPILER__HelloWorld_Release /home/semakiller/Рабочий$ стол/Projects/BMSTU/MazeProject1/project_on_cpp_with_ui/HelloWorld/mainwindow.cpp || cmake_object_order_depends_target_HelloWorld
  DEFINES = -DQT_CORE_LIB -DQT_GUI_LIB -DQT_NO_DEBUG -DQT_WIDGETS_LIB
  DEP_FILE = CMakeFiles/HelloWorld.dir/mainwindow.cpp.o.d
  FLAGS = -O3 -DNDEBUG -fPIC -std=gnu++17
  INCLUDES = -I"/home/semakiller/Рабочий стол/Projects/BMSTU/MazeProject1/project_on_cpp_with_ui/HelloWorld/build/Desktop-Release/HelloWorld_autogen/include" -isystem /usr/include/x86_64-linux-gnu/qt5 -isystem /usr/include/x86_64-linux-gnu/qt5/QtWidgets -isystem /usr/include/x86_64-linux-gnu/qt5/QtGui -isystem /usr/include/x86_64-linux-gnu/qt5/QtCore -isystem /usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++
  OBJECT_DIR = CMakeFiles/HelloWorld.dir
  OBJECT_FILE_DIR = CMakeFiles/HelloWorld.dir


# =============================================================================
# Link build statements for EXECUTABLE target HelloWorld


#############################################
# Link the executable HelloWorld

build HelloWorld: CXX_EXECUTABLE_LINKER__HelloWorld_Release CMakeFiles/HelloWorld.dir/HelloWorld_autogen/mocs_compilation.cpp.o CMakeFiles/HelloWorld.dir/main.cpp.o CMakeFiles/HelloWorld.dir/mainwindow.cpp.o | /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5.15.3 /usr/lib/x86_64-linux-gnu/libQt5Gui.so.5.15.3 /usr/lib/x86_64-linux-gnu/libQt5Core.so.5.15.3 || HelloWorld_autogen HelloWorld_autogen_timestamp_deps
  FLAGS = -O3 -DNDEBUG
  LINK_LIBRARIES = /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5.15.3  /usr/lib/x86_64-linux-gnu/libQt5Gui.so.5.15.3  /usr/lib/x86_64-linux-gnu/libQt5Core.so.5.15.3
  OBJECT_DIR = CMakeFiles/HelloWorld.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = HelloWorld
  TARGET_PDB = HelloWorld.dbg


#############################################
# Utility command for edit_cache

build CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd "/home/semakiller/Рабочий стол/Projects/BMSTU/MazeProject1/project_on_cpp_with_ui/HelloWorld/build/Desktop-Release" && /usr/bin/cmake -E echo No\ interactive\ CMake\ dialog\ available.
  DESC = No interactive CMake dialog available...
  restat = 1

build edit_cache: phony CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd "/home/semakiller/Рабочий стол/Projects/BMSTU/MazeProject1/project_on_cpp_with_ui/HelloWorld/build/Desktop-Release" && /usr/bin/cmake --regenerate-during-build -S"/home/semakiller/Рабочий стол/Projects/BMSTU/MazeProject1/project_on_cpp_with_ui/HelloWorld" -B"/home/semakiller/Рабочий стол/Projects/BMSTU/MazeProject1/project_on_cpp_with_ui/HelloWorld/build/Desktop-Release"
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build rebuild_cache: phony CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build list_install_components: phony


#############################################
# Utility command for install

build CMakeFiles/install.util: CUSTOM_COMMAND all
  COMMAND = cd "/home/semakiller/Рабочий стол/Projects/BMSTU/MazeProject1/project_on_cpp_with_ui/HelloWorld/build/Desktop-Release" && /usr/bin/cmake -P cmake_install.cmake
  DESC = Install the project...
  pool = console
  restat = 1

build install: phony CMakeFiles/install.util


#############################################
# Utility command for install/local

build CMakeFiles/install/local.util: CUSTOM_COMMAND all
  COMMAND = cd "/home/semakiller/Рабочий стол/Projects/BMSTU/MazeProject1/project_on_cpp_with_ui/HelloWorld/build/Desktop-Release" && /usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build install/local: phony CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build CMakeFiles/install/strip.util: CUSTOM_COMMAND all
  COMMAND = cd "/home/semakiller/Рабочий стол/Projects/BMSTU/MazeProject1/project_on_cpp_with_ui/HelloWorld/build/Desktop-Release" && /usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build install/strip: phony CMakeFiles/install/strip.util


#############################################
# Utility command for HelloWorld_autogen_timestamp_deps

build HelloWorld_autogen_timestamp_deps: phony CMakeFiles/HelloWorld_autogen_timestamp_deps


#############################################
# Utility command for HelloWorld_autogen

build HelloWorld_autogen: phony CMakeFiles/HelloWorld_autogen HelloWorld_autogen/include/ui_mainwindow.h HelloWorld_autogen/timestamp HelloWorld_autogen/mocs_compilation.cpp HelloWorld_autogen_timestamp_deps


#############################################
# Custom command for HelloWorld_autogen/timestamp

build HelloWorld_autogen/timestamp HelloWorld_autogen/mocs_compilation.cpp | ${cmake_ninja_workdir}HelloWorld_autogen/timestamp ${cmake_ninja_workdir}HelloWorld_autogen/mocs_compilation.cpp: CUSTOM_COMMAND /usr/lib/qt5/bin/moc /usr/lib/qt5/bin/uic || HelloWorld_autogen_timestamp_deps
  COMMAND = cd "/home/semakiller/Рабочий стол/Projects/BMSTU/MazeProject1/project_on_cpp_with_ui/HelloWorld/build/Desktop-Release" && /usr/bin/cmake -E cmake_autogen "/home/semakiller/Рабочий стол/Projects/BMSTU/MazeProject1/project_on_cpp_with_ui/HelloWorld/build/Desktop-Release/CMakeFiles/HelloWorld_autogen.dir/AutogenInfo.json" Release && /usr/bin/cmake -E touch "/home/semakiller/Рабочий стол/Projects/BMSTU/MazeProject1/project_on_cpp_with_ui/HelloWorld/build/Desktop-Release/HelloWorld_autogen/timestamp" && /usr/bin/cmake -E cmake_transform_depfile Ninja gccdepfile "/home/semakiller/Рабочий стол/Projects/BMSTU/MazeProject1/project_on_cpp_with_ui/HelloWorld" "/home/semakiller/Рабочий стол/Projects/BMSTU/MazeProject1/project_on_cpp_with_ui/HelloWorld" "/home/semakiller/Рабочий стол/Projects/BMSTU/MazeProject1/project_on_cpp_with_ui/HelloWorld/build/Desktop-Release" "/home/semakiller/Рабочий стол/Projects/BMSTU/MazeProject1/project_on_cpp_with_ui/HelloWorld/build/Desktop-Release" "/home/semakiller/Рабочий стол/Projects/BMSTU/MazeProject1/project_on_cpp_with_ui/HelloWorld/build/Desktop-Release/HelloWorld_autogen/deps" "/home/semakiller/Рабочий стол/Projects/BMSTU/MazeProject1/project_on_cpp_with_ui/HelloWorld/build/Desktop-Release/CMakeFiles/d/532aba2175b89fe8f6fecb059a8f821eb5600fc8f948e87d7e50a16da4dfd250.d"
  DESC = Automatic MOC and UIC for target HelloWorld
  depfile = /home/semakiller/Рабочий стол/Projects/BMSTU/MazeProject1/project_on_cpp_with_ui/HelloWorld/build/Desktop-Release/CMakeFiles/d/532aba2175b89fe8f6fecb059a8f821eb5600fc8f948e87d7e50a16da4dfd250.d
  restat = 1


#############################################
# Phony custom command for CMakeFiles/HelloWorld_autogen_timestamp_deps

build CMakeFiles/HelloWorld_autogen_timestamp_deps | ${cmake_ninja_workdir}CMakeFiles/HelloWorld_autogen_timestamp_deps: phony /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5.15.3 /usr/lib/qt5/bin/moc /usr/lib/qt5/bin/uic


#############################################
# Phony custom command for CMakeFiles/HelloWorld_autogen

build CMakeFiles/HelloWorld_autogen HelloWorld_autogen/include/ui_mainwindow.h | ${cmake_ninja_workdir}CMakeFiles/HelloWorld_autogen ${cmake_ninja_workdir}HelloWorld_autogen/include/ui_mainwindow.h: phony HelloWorld_autogen/timestamp || HelloWorld_autogen_timestamp_deps

# =============================================================================
# Target aliases.

# =============================================================================
# Folder targets.

# =============================================================================

#############################################
# Folder: /home/semakiller/Рабочий стол/Projects/BMSTU/MazeProject1/project_on_cpp_with_ui/HelloWorld/build/Desktop-Release

build all: phony HelloWorld

# =============================================================================
# Built-in targets


#############################################
# Re-run CMake if any of its inputs changed.

build build.ninja: RERUN_CMAKE | ../../CMakeLists.txt .qtc/package-manager/auto-setup.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5/Qt5Config.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5/Qt5ConfigVersion.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5/Qt5ModuleLocation.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Core/Qt5CoreConfig.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Core/Qt5CoreConfigExtras.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Core/Qt5CoreConfigExtrasMkspecDir.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Core/Qt5CoreConfigVersion.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Core/Qt5CoreMacros.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5GuiConfig.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5GuiConfigExtras.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5GuiConfigVersion.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QComposePlatformInputContextPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QEglFSEmulatorIntegrationPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QEglFSIntegrationPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QEglFSKmsEglDeviceIntegrationPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QEglFSKmsGbmIntegrationPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QEglFSX11IntegrationPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QEvdevKeyboardPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QEvdevMousePlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QEvdevTabletPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QEvdevTouchScreenPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QGifPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QICOPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QIbusPlatformInputContextPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QJpegPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QLibInputPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QLinuxFbIntegrationPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QMinimalEglIntegrationPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QMinimalIntegrationPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QOffscreenIntegrationPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QTuioTouchPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QVncIntegrationPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QXcbEglIntegrationPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QXcbGlxIntegrationPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QXcbIntegrationPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Widgets/Qt5WidgetsConfig.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Widgets/Qt5WidgetsConfigExtras.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Widgets/Qt5WidgetsConfigVersion.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Widgets/Qt5WidgetsMacros.cmake /usr/share/cmake-3.22/Modules/CMakeCXXInformation.cmake /usr/share/cmake-3.22/Modules/CMakeCommonLanguageInclude.cmake /usr/share/cmake-3.22/Modules/CMakeGenericSystem.cmake /usr/share/cmake-3.22/Modules/CMakeInitializeConfigs.cmake /usr/share/cmake-3.22/Modules/CMakeLanguageInformation.cmake /usr/share/cmake-3.22/Modules/CMakeParseArguments.cmake /usr/share/cmake-3.22/Modules/CMakeSystemSpecificInformation.cmake /usr/share/cmake-3.22/Modules/CMakeSystemSpecificInitialize.cmake /usr/share/cmake-3.22/Modules/Compiler/CMakeCommonCompilerMacros.cmake /usr/share/cmake-3.22/Modules/Compiler/GNU-CXX.cmake /usr/share/cmake-3.22/Modules/Compiler/GNU.cmake /usr/share/cmake-3.22/Modules/GNUInstallDirs.cmake /usr/share/cmake-3.22/Modules/Platform/Linux-GNU-CXX.cmake /usr/share/cmake-3.22/Modules/Platform/Linux-GNU.cmake /usr/share/cmake-3.22/Modules/Platform/Linux.cmake /usr/share/cmake-3.22/Modules/Platform/UnixPaths.cmake CMakeCache.txt CMakeFiles/3.22.1/CMakeCXXCompiler.cmake CMakeFiles/3.22.1/CMakeSystem.cmake
  pool = console


#############################################
# A missing CMake input file is not an error.

build ../../CMakeLists.txt .qtc/package-manager/auto-setup.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5/Qt5Config.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5/Qt5ConfigVersion.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5/Qt5ModuleLocation.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Core/Qt5CoreConfig.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Core/Qt5CoreConfigExtras.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Core/Qt5CoreConfigExtrasMkspecDir.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Core/Qt5CoreConfigVersion.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Core/Qt5CoreMacros.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5GuiConfig.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5GuiConfigExtras.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5GuiConfigVersion.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QComposePlatformInputContextPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QEglFSEmulatorIntegrationPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QEglFSIntegrationPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QEglFSKmsEglDeviceIntegrationPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QEglFSKmsGbmIntegrationPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QEglFSX11IntegrationPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QEvdevKeyboardPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QEvdevMousePlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QEvdevTabletPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QEvdevTouchScreenPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QGifPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QICOPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QIbusPlatformInputContextPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QJpegPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QLibInputPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QLinuxFbIntegrationPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QMinimalEglIntegrationPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QMinimalIntegrationPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QOffscreenIntegrationPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QTuioTouchPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QVncIntegrationPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QXcbEglIntegrationPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QXcbGlxIntegrationPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Gui/Qt5Gui_QXcbIntegrationPlugin.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Widgets/Qt5WidgetsConfig.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Widgets/Qt5WidgetsConfigExtras.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Widgets/Qt5WidgetsConfigVersion.cmake /usr/lib/x86_64-linux-gnu/cmake/Qt5Widgets/Qt5WidgetsMacros.cmake /usr/share/cmake-3.22/Modules/CMakeCXXInformation.cmake /usr/share/cmake-3.22/Modules/CMakeCommonLanguageInclude.cmake /usr/share/cmake-3.22/Modules/CMakeGenericSystem.cmake /usr/share/cmake-3.22/Modules/CMakeInitializeConfigs.cmake /usr/share/cmake-3.22/Modules/CMakeLanguageInformation.cmake /usr/share/cmake-3.22/Modules/CMakeParseArguments.cmake /usr/share/cmake-3.22/Modules/CMakeSystemSpecificInformation.cmake /usr/share/cmake-3.22/Modules/CMakeSystemSpecificInitialize.cmake /usr/share/cmake-3.22/Modules/Compiler/CMakeCommonCompilerMacros.cmake /usr/share/cmake-3.22/Modules/Compiler/GNU-CXX.cmake /usr/share/cmake-3.22/Modules/Compiler/GNU.cmake /usr/share/cmake-3.22/Modules/GNUInstallDirs.cmake /usr/share/cmake-3.22/Modules/Platform/Linux-GNU-CXX.cmake /usr/share/cmake-3.22/Modules/Platform/Linux-GNU.cmake /usr/share/cmake-3.22/Modules/Platform/Linux.cmake /usr/share/cmake-3.22/Modules/Platform/UnixPaths.cmake CMakeCache.txt CMakeFiles/3.22.1/CMakeCXXCompiler.cmake CMakeFiles/3.22.1/CMakeSystem.cmake: phony


#############################################
# Clean additional files.

build CMakeFiles/clean.additional: CLEAN_ADDITIONAL
  CONFIG = Release


#############################################
# Clean all the built files.

build clean: CLEAN CMakeFiles/clean.additional


#############################################
# Print all primary targets available.

build help: HELP


#############################################
# Make the all target the default.

default all
